# Usage:
#  tox              # runs all defined environments
#  tox -e py25,py26 # runs the specified environments, comma-separated
#  tox --recreate   # recreate and then run all virtualenvs
#  tox hydrogen     # runs the "hydrogen" tests on all environments

# It's possible to combine commands freely, eg:
#  tox --recreate -e py25,py27 sympy/core
# will recreate the py25 and py27 environments, and then run the
# tests in sympy/core in them.

[tox]
# Define the environments. By default, py24-py32, jython, pypy.
# It's also possible to define a custom environment, like docs.
# You must list a defined environment here in order to run it.
; envlist=py27, pypy, flake8
envlist = py27-py32, pypy, flake8

# Commands to be executed, it could be anything. The brackets are
# important, as they allow us to call bin/test with arguments we
# pass on through tox. Applies to all default environments.
# You can run multiple commands by putting them on subsequent lines
# Note that you should use bin/test and bin/doctest rather than setup.py
# test, because the latter does not work with [].
[testenv]
changedir = tests
# run py test
# with coverage
# substitute with tox' positional arguments
commands = py.test --capture=sys --cov lb {posargs:}
platform = linux|darwin
deps =
  pytest
  pytest-cov

[testenv:flake8]
deps = flake8
# W293: whitespace on blank lines is ok
ignore = W293
commands =
  flake8 lb tests --max-line-length=120
# Ignore some well known paths
exclude = .env,.tox,dist,doc,build,*.egg

[testenv:docs]
changedir = docs
deps =
  sphinx
  py
commands =
  py.test --tb=line -v --junitxml=junit-{envname}.xml check_sphinx.py
